---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    ports:
      - '3500:3500'
    environment:
      ZOOKEEPER_CLIENT_PORT: 3500
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:latest
    hostname: broker
    links:
      - zookeeper
    ports:
      - '3501:3501'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:3500'
      KAFKA_ADVERTISED_LISTENERS: 'EXTERNAL://localhost:3501,PLAINTEXT://broker:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_LISTENERS: 'EXTERNAL://0.0.0.0:3501,PLAINTEXT://0.0.0.0:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 100000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 100000000
    restart: on-failure

  schema_registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema_registry
    links:
      - zookeeper
      - broker
    ports:
      - '3502:3502'
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
      SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:3502'
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:3500'
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://broker:9092'
    restart: on-failure

  kafka_rest:
    image: confluentinc/cp-kafka-rest:latest
    hostname: kafka_rest
    links:
      - zookeeper
      - schema_registry
      - broker
    ports:
      - '8082:8082'
    environment:
      KAFKA_REST_HOST_NAME: kafka_rest
      KAFKA_REST_BOOTSTRAP_SERVERS: 'PLAINTEXT://broker:9092'
      KAFKA_REST_ZOOKEEPER_CONNECT: 'zookeeper:3500'
      KAFKA_REST_LISTENERS: 'http://0.0.0.0:8082'
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema_registry:3502'
      KAFKA_CONSUMER_REQUEST_TIMEOUT_MS: 30000
      KAFKA_REST_ACCESS_CONTROL_ALLOW_METHODS: 'GET,POST,PUT,DELETE,OPTIONS'
      KAFKA_REST_ACCESS_CONTROL_ALLOW_ORIGIN: '*'
    restart: on-failure

  kafka_topics_ui:
    image: landoop/kafka-topics-ui:latest
    hostname: kafka_topics_ui
    links:
      - kafka_rest
    ports:
      - '3600:8000'
    environment:
      KAFKA_REST_PROXY_URL: 'http://kafka_rest:8082'
      PROXY: 'true'
      MAX_BYTES: 10485760

  kafka_schema_registry_ui:
    image: landoop/schema-registry-ui:latest
    hostname: kafka_schema_registry_ui
    links:
      - schema_registry
    ports:
      - '3601:8000'
    environment:
      SCHEMAREGISTRY_URL: 'http://schema_registry:3502'
      PROXY: 'true'

  bootstrapper:
    image: drivereu/silent-producer:latest
    depends_on:
      - broker
      - schema_registry
    environment:
      KAFKA_HOST: broker:9092
      SCHEMA_REGISTRY: http://schema_registry:3502
      PRODUCE_TOPICS: chemical_hazard,cbrn_geojson,simulation_entity_item,simulation_time_mgmt,system_topic_access_invite,simulation_request_startinject,simulation_entity_post,standard_named_geojson,system_heartbeat,simulation_entity_featurecollection,system_logging
      # simulation_request_transport,lcms_plots,simulation_affected_area,simulation_sumo_configuration,standard_cap,chain_power,chain_care,chain_flood,chain,flood_prediction_geojson,flood_actual,system_timing
    volumes:
      - ./schemas:/app/src/schemas
    restart: on-failure 
    
  time_service:
    image: drivereu/test-bed-time-service:latest
    depends_on:
      - broker
      - schema_registry    
    ports:
      - "8100:8100"
    environment:
      KAFKA_BROKER_URL: broker:9092
      SCHEMA_REGISTRY_URL: http://schema_registry:3502
      AUTO_REGISTER_SCHEMAS: "true"
    restart: on-failure
    
  driving:
    image: osrm/osrm-backend
    ports:
      - "5000:5000"
    command:
      - osrm-routed
      - --algorithm
      - mld
      - /data/${PBF_FILE}.osrm
    volumes:
      - ${DATA_FOLDER}/driving:/data

  cycling:
    image: osrm/osrm-backend
    ports:
      - "5001:5000"
    command:
      - osrm-routed
      - --algorithm
      - mld
      - /data/${PBF_FILE}.osrm
    volumes:
      - ${DATA_FOLDER}/cycling:/data

  walking:
    image: osrm/osrm-backend
    ports:
      - "5002:5000"
    command:
      - osrm-routed
      - --algorithm
      - mld
      - /data/${PBF_FILE}.osrm
    volumes:
      - ${DATA_FOLDER}/walking:/data  

  #meteoservice:
  #  image: assistanceeu/meteoservice:latest
  #  ports:
  #    - 8081:8081
#
  #dispersionservice:
  #  image: assistanceeu/dispersionservice:latest
  #  depends_on:
  #    - broker
  #    - schema_registry
  #  ports:
  #    - 8080:8080
  #  environment:
  #    METEO_SERVICE: http://meteoservice:8081
#
  #chemical_hazard_tool:
  #  image: assistanceeu/chemical-hazard-tool:latest
  #  depends_on:
  #    - broker
  #    - schema_registry
  #  ports:
  #    - 3333:3333
  #  environment:
  #    KAFKA_HOST: broker:9092
  #    SCHEMA_REGISTRY: http://schema_registry:3502
  #    PORT: 3333
  #    METEO_SERVICE: http://meteoservice:8081
  #    DISPERSION_SERVICE: http://dispersionservice:8080
#
 # c2app:
 #   image: timovdk/c2app:0.1.0
 #   depends_on:
 #     - broker
 #     - schema_registry    
 #   ports:
 #     - 3000:3000
 #   environment:
 #     KAFKA_HOST: broker:9092
 #     SCHEMA_REGISTRY: http://schema_registry:3502
 #     PORT: 3000
 #     SERVER: http://localhost:3000